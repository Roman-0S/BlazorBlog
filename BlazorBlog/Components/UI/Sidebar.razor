@using BlazorBlog.Client.Components.UI.Blog
@using BlazorBlog.Client.Models
@using BlazorBlog.Client.Services.Interfaces

@inject ICategoryDTOService CategoryService
@inject IBlogPostDTOService BlogService


<div class="offcanvas-lg offcanvas-end" id="sidebarBlog">
    <div class="offcanvas-header">
        <h4 class="offcanvas-title">Sidebar</h4>
        <button class="btn-close ms-auto" type="button" data-bs-dismiss="offcanvas" data-bs-target="#sidebarBlog" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">

        <!-- Search box -->
        <form>

            <div class="position-relative mb-4 mb-lg-5">

                <i class="ai-search position-absolute top-50 start-0 translate-middle-y ms-3"></i>

                <input class="form-control ps-5" type="search" placeholder="Enter keyword" />

            </div>

        </form>

        <!-- Category links -->
        <h4 class="pt-1 pt-lg-0 mt-lg-n2">Categories:</h4>
        <ul class="nav flex-column mb-lg-5 mb-4">

            <li class="mb-2">

                <a class="nav-link d-flex p-0 active" href="#">

                    All categories

                </a>

            </li>

            @foreach (CategoryDTO category in categories)
            {
                <li class="mb-2">

                    <a class="nav-link d-flex p-0" href="#">

                        @category.Name

                        <span class="fs-sm text-body-secondary ms-2">(@category.Posts.Count)</span>

                    </a>

                </li>
            }

        </ul>

        <!-- Featured posts widget -->
        <h4 class="pt-3 pt-lg-0 pb-1">Trending posts:</h4>
        <div class="mb-lg-5 mb-4">

            @foreach (BlogPostDTO blogPost in blogPosts)
            {
                <SideBarBlogCard blogPost="blogPost" />
            }


        </div>

        <!-- Social buttons -->
        <h4 class="pt-3 pt-lg-0 pb-1">Find Me:</h4>
        <div class="d-flex mt-n3 ms-n3 mb-lg-5 mb-4 pb-3 pb-lg-0">
            
            <a class="btn btn-secondary btn-icon btn-sm btn-linkedin rounded-circle mt-3 ms-3" href="https://www.linkedin.com/in/roman-steeledev/" target="_blank" aria-label="LinkedIn">
                <i class="ai-linkedin"></i>
            </a>

        </div>

        <!-- Banner -->
        <div class="position-relative mb-3">
            <div class="position-absolute w-100 text-center top-0 start-50 translate-middle-x pt-4" style="max-width: 15rem;" data-bs-theme="light">
                <h3 class="h2 pt-3 mb-0">Your banner here!</h3>
            </div>
            <img class="rounded-5" src="assets/img/blog/sidebar/banner.jpg" alt="Banner">
        </div>
    </div>
</div>



@code {

    #region parameters



    #endregion


    #region state

    private IEnumerable<CategoryDTO> categories = [];

    private int categoryCount = 5;

    private IEnumerable<BlogPostDTO> blogPosts = [];

    private int blogCount = 4;

    #endregion


    #region methods

    protected override async Task OnInitializedAsync()
    {
        try
        {
            categories = await CategoryService.GetPopularCategoriesAsync(categoryCount);

            blogPosts = await BlogService.GetPopularBlogPostsAsync(blogCount);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    #endregion

}
