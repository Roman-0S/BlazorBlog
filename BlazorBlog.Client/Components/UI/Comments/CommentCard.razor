@using BlazorBlog.Client.Helpers
@if (Comment is not null)
{

    @if (UserInfo is not null)
    {

        @if (Comment.AuthorId == UserInfo.UserId || UserInfo.Roles.Contains("Author") || UserInfo.Roles.Contains("Moderator"))
        {

            @if (status == Status.Viewing)
            {

                <div class="border-bottom py-4 mt-2 mb-4">

                    <div class="d-flex align-items-center pb-1 mb-3">

                        <img class="rounded-circle" src="@Comment.AuthorImage" width="48" alt="Comment author">

                        <div class="ps-3">

                            <h6 class="mb-0">@Comment.AuthorName</h6>

                            <span class="fs-sm text-body-secondary">@ConvertDateHelper.ConvertDate(Comment.Created)</span>

                        </div>

                    </div>

                    <p class="pb-2 mb-0">@((MarkupString)Comment.Content!)</p>

                    <div class="hstack justify-content-between">

                        <div>

                            @if (Comment.Updated.ToLocalTime().ToString("g") != "1/1/0001 12:00 AM")
                            {
                                <p class="m-0 fs-lg">Updated:</p>

                                <span class="fs-sm text-body-secondary">@Comment.Updated.ToLocalTime().ToString("g")</span>
                            }

                        </div>

                        <div class="hstack justify-content-end gap-2">

                            <button class="btn btn-sm btn-primary" @onclick="() => status = Status.Editing"><i class="ai ai-pencil"></i></button>

                            <button class="btn btn-sm btn-outline-danger" @onclick="() => status = Status.Deleting"><i class="ai ai-cross-alt"></i></button>

                        </div>

                    </div>

                    <div class="mt-2">

                        @if (!string.IsNullOrEmpty(Comment.UpdateDescription))
                        {
                            <p class="mb-1 fs-lg">Moderator Update Reason:</p>

                            <span>@Comment.UpdateDescription</span>
                        }

                    </div>


                </div>

            }
            else if (status == Status.Editing)
            {

                <div class="border-bottom py-4 mt-2 mb-4">

                    <div class="d-flex align-items-center pb-1 mb-3">

                        <img class="rounded-circle" src="@Comment.AuthorImage" width="48" alt="Comment author">

                        <div class="ps-3">

                            <h6 class="mb-0">@Comment.AuthorName</h6>

                            <div>

                                @if ((Comment.Created.Day == DateTimeOffset.UtcNow.Day))
                                {

                                    @if ((Comment.Created.Hour - DateTimeOffset.UtcNow.Hour) == 0)
                                    {
                                        <span class="fs-sm text-body-secondary">@(int.Parse(DateTimeOffset.UtcNow.ToLocalTime().ToString("mm")) - int.Parse(Comment.Created.ToLocalTime().ToString("mm"))) minutes ago</span>
                                    }
                                    else
                                    {
                                        <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                                    }

                                }
                                else
                                {
                                    <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                                }

                            </div>

                        </div>

                    </div>

                    <CommentForm OnSubmit="HandleSubmit" Comment="Comment" />

                    <div>

                        @if (Comment.Updated.ToLocalTime().ToString("g") != "1/1/0001 12:00 AM")
                        {
                            <p class="m-0 fs-lg">Updated:</p>

                            <span class="fs-sm text-body-secondary">@Comment.Updated.ToLocalTime().ToString("g")</span>
                        }

                    </div>

                    <div class="mt-2">

                        @if (!string.IsNullOrEmpty(Comment.UpdateDescription))
                        {
                            <p class="mb-1 fs-lg">Moderator Update Reason:</p>

                            <span>@Comment.UpdateDescription</span>
                        }

                    </div>

                </div>

            }
            else if (status == Status.Deleting)
            {

                <div class="border-bottom py-4 mt-2 mb-4">

                    <div class="d-flex align-items-center pb-1 mb-3">

                        <img class="rounded-circle" src="@Comment.AuthorImage" width="48" alt="Comment author">

                        <div class="ps-3">

                            <h6 class="mb-0">@Comment.AuthorName</h6>

                            <div>

                                @if ((Comment.Created.Day == DateTimeOffset.UtcNow.Day))
                                {

                                    @if ((Comment.Created.Hour - DateTimeOffset.UtcNow.Hour) == 0)
                                    {
                                        <span class="fs-sm text-body-secondary">@(int.Parse(DateTimeOffset.UtcNow.ToLocalTime().ToString("mm")) - int.Parse(Comment.Created.ToLocalTime().ToString("mm"))) minutes ago</span>
                                    }
                                    else
                                    {
                                        <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                                    }

                                }
                                else
                                {
                                    <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                                }

                            </div>

                        </div>

                    </div>

                    <p class="pb-2 mb-0">@((MarkupString)Comment.Content!)</p>

                    <div class="hstack justify-content-between">

                        <div>

                            @if (Comment.Updated.ToLocalTime().ToString("g") != "1/1/0001 12:00 AM")
                            {
                                <p class="m-0 fs-lg">Updated:</p>

                                <span class="fs-sm text-body-secondary">@Comment.Updated.ToLocalTime().ToString("g")</span>
                            }

                        </div>

                        <div class="hstack justify-content-end gap-2">

                            <button class="btn btn-sm btn-danger" @onclick="HandleDelete">Delete</button>

                            <button class="btn btn-sm btn-outline-secondary" @onclick="() => status = Status.Viewing">Cancel</button>

                        </div>

                    </div>

                    <div class="mt-2">

                        @if (!string.IsNullOrEmpty(Comment.UpdateDescription))
                        {
                            <p class="mb-1 fs-lg">Moderator Update Reason:</p>

                            <span>@Comment.UpdateDescription</span>
                        }

                    </div>

                </div>

            }

        }
        else
        {

            <div class="border-bottom py-4 mt-2 mb-4">

                <div class="d-flex align-items-center pb-1 mb-3">

                    <img class="rounded-circle" src="@Comment.AuthorImage" width="48" alt="Comment author">

                    <div class="ps-3">

                        <h6 class="mb-0">@Comment.AuthorName</h6>

                        <div>

                            @if ((Comment.Created.Day == DateTimeOffset.UtcNow.Day))
                            {

                                @if ((Comment.Created.Hour - DateTimeOffset.UtcNow.Hour) == 0)
                                {
                                    <span class="fs-sm text-body-secondary">@(int.Parse(DateTimeOffset.UtcNow.ToLocalTime().ToString("mm")) - int.Parse(Comment.Created.ToLocalTime().ToString("mm"))) minutes ago</span>
                                }
                                else
                                {
                                    <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                                }

                            }
                            else
                            {
                                <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                            }

                        </div>

                    </div>

                </div>

                <p class="pb-2 mb-0">@((MarkupString)Comment.Content!)</p>

                <div>

                    @if (Comment.Updated.ToLocalTime().ToString("g") != "1/1/0001 12:00 AM")
                    {
                        <p class="m-0 fs-lg">Updated:</p>

                        <span class="fs-sm text-body-secondary">@Comment.Updated.ToLocalTime().ToString("g")</span>
                    }

                </div>

                <div class="mt-2">

                    @if (!string.IsNullOrEmpty(Comment.UpdateDescription))
                    {
                        <p class="mb-1 fs-lg">Moderator Update Reason:</p>

                        <span>@Comment.UpdateDescription</span>
                    }

                </div>

            </div>

        }

    }
    else
    {

        <div class="border-bottom py-4 mt-2 mb-4">

            <div class="d-flex align-items-center pb-1 mb-3">

                <img class="rounded-circle" src="@Comment.AuthorImage" width="48" alt="Comment author">

                <div class="ps-3">

                    <h6 class="mb-0">@Comment.AuthorName</h6>

                    <div>

                        @if ((Comment.Created.Day == DateTimeOffset.UtcNow.Day))
                        {

                            @if ((Comment.Created.Hour - DateTimeOffset.UtcNow.Hour) == 0)
                            {
                                <span class="fs-sm text-body-secondary">@(int.Parse(DateTimeOffset.UtcNow.ToLocalTime().ToString("mm")) - int.Parse(Comment.Created.ToLocalTime().ToString("mm"))) minutes ago</span>
                            }
                            else
                            {
                                <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                            }

                        }
                        else
                        {
                            <span class="fs-sm text-body-secondary">@Comment.Created.ToLocalTime().ToString("g")</span>
                        }


                    </div>


                </div>

            </div>

            <p class="pb-2 mb-0">@((MarkupString)Comment.Content!)</p>

            <div>

                @if (Comment.Updated.ToLocalTime().ToString("g") != "1/1/0001 12:00 AM")
                {
                    <p class="m-0 fs-lg">Updated:</p>

                    <span class="fs-sm text-body-secondary">@Comment.Updated.ToLocalTime().ToString("g")</span>
                }

            </div>

            <div class="mt-2">

                @if (!string.IsNullOrEmpty(Comment.UpdateDescription))
                {
                    <p class="mb-1 fs-lg">Moderator Update Reason:</p>

                    <span>@Comment.UpdateDescription</span>
                }

            </div>

        </div>

    }


}




@code {

    #region parameters

    [Parameter, EditorRequired]
    public UserInfo? UserInfo { get; set; }

    [Parameter, EditorRequired]
    public CommentDTO? Comment { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<int> OnDelete { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<CommentDTO> OnEdit { get; set; }

    #endregion


    #region state

    private enum Status
    {
        Viewing,
        Editing,
        Deleting
    }

    private Status status = Status.Viewing;

    #endregion


    #region methods

    private async Task HandleSubmit(CommentDTO comment)
    {
        await OnEdit.InvokeAsync(comment);

        status = Status.Viewing;
    }

    private async Task HandleDelete()
    {
        await OnDelete.InvokeAsync(Comment!.Id);

        status = Status.Viewing;
    }

    #endregion

}
