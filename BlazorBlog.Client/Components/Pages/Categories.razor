@page "/categories"

@using BlazorBlog.Client.Components.UI.Categories
@using BlazorBlog.Client.Services.Interfaces
@using BlazorBlog.Client.Helpers

@rendermode InteractiveServer

@inject ICategoryDTOService CategoryService


<div>

    <div class="mb-3 hstack justify-content-between">

        <h1 class="display-5">Categories</h1>

        <a class="btn btn-primary" role="button" data-bs-toggle="collapse" href="#collapseForm" aria-expaned="false" aria-controls="collapseForm">Add a Category</a>

    </div>

    <div class="collapse" id="collapseForm">

        <CategoryForm Category="new CategoryDTO()" OnSubmit="HandleSubmit" OnCancel="HandleCancel" />

    </div>

    <hr class="my-5" />

    <div class="mt-5">

        @foreach (CategoryDTO category in categories)
        {
            <div class="mb-4">

                <CategoryCard Category="category" OnCategoryDelete="DeleteCategory" OnCategoryUpdate="UpdateCategory" />

            </div>
        }

    </div>

</div>



@code {
    #region parameters



    #endregion


    #region state

    private IEnumerable<CategoryDTO> categories = [];

    #endregion


    #region methods

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategoriesAsync();
    }

    private async Task HandleSubmit(CategoryDTO category)
    {
        try
        {
            await CategoryService.CreateCategoryAsync(category);

            categories = await CategoryService.GetCategoriesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    private void HandleCancel()
    {

    }

    private async Task DeleteCategory(int categoryId)
    {
        try
        {
            await CategoryService.DeleteCategoryAsync(categoryId);

            categories = await CategoryService.GetCategoriesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    private async Task UpdateCategory(CategoryDTO category)
    {
        try
        {
            await CategoryService.UpdateCategoryAsync(category);

            categories = await CategoryService.GetCategoriesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    #endregion

}
